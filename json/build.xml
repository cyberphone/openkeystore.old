<project name="JWS Clear-text Signature Demo" default="help">

  <!-- set properties for this build -->
  <property name="src.dir" value="src"/>
  <property name="class_war_path" value="WEB-INF/classes/org/webpki/webapps/json/jws"/>
  
  <property name="appcorename" value="jws-ct"/>
  <property name="application" value="${appcorename}.war"/>
  
  <property name="keypassword" value="foo123"/>
  <property name="keyfilext" value=".p12"/>
  <property name="key.dir" location="keys"/>
  <property name="logotype.dir" location="logotype"/>
  
  <property name="clientroot" value="mybank-clientroot"/>
  <property name="clientkey_rsa" value="mybank-client-key-rsa"/>
  <property name="clientkey_ec" value="mybank-client-key-ec"/>
  
  <property name="debug" value="on"/>
  <property environment="env"/>
  <property name="third.party.lib.dir" location="../resources/third-party-jars"/>
  <property name="webpki.lib.dir" location="../library/dist"/>
  <property name="catalina.home" value="${env.CATALINA_HOME}"/>

  <condition property="joseMode" value="true" else="false">
	  <isset property="jose"/>
  </condition>
  <condition property="joseFile" value="-jose" else="">
	  <isset property="jose"/>
  </condition>
  <property name="signature.dir" location="signature${joseFile}"/>

	<resources id="jcs_application.xml">
<string><![CDATA[    <!-- JWS Demo -->
    <module>
        <web>
            <web-uri>${application}</web-uri>
            <context-root>/${appcorename}</context-root>
        </web>
    </module>
</application>]]></string>
    </resources>
  <property name="ejbca-app-xml-mod" refid="jcs_application.xml"/>

  <condition property="storetype" value="PKCS12" else="JKS">
    <matches pattern=".*\.p12$" string="${keyfilext}"/>
  </condition>

  <target name="help">
      <echo message="build tomcat [-Djose=0] ejbca-jcs zip-distribution createcerts"/>
  </target>

  <target name="_init" unless="app_path">
    <!-- Set up where application should reside --> 
    <condition property="tomcat_app_root_set">
      <isset property="env.CATALINA_HOME"/>
    </condition>
    <fail message="CATALINA_HOME must be set to environment!" unless="tomcat_app_root_set"/>

  </target>

  <target name="_delete_tmp" unless="${ejbca.tmp.path}">
    <delete dir="${temp.dir}"/>
    <mkdir dir="${temp.dir}"/>
  </target>
  
  <target name="_build">
    <property name="temp.dir" value=".tmp"/>
    <antcall target="_delete_tmp"/>
    <fixcrlf srcdir="${src.dir}"
       tab="remove"
       tablength="4"
       eol="lf"
       eof="remove"
       includes="**/*.java"/>
    <copy file="web.xml" todir="${temp.dir}"/>
    <javac debug="${debug}"
           source="${javaversion}"
           target="${javaversion}"
           srcdir="${src.dir}"
           destdir="${temp.dir}"
           classpath="${compile_classpath}"
           includeAntRuntime="false"/>
    <property name="clientkey" value="${clientkey_rsa}"/>
    <property name="bouncycastle.first" value="true"/>
    <replace file="${temp.dir}/web.xml">
	  <replacefilter token="@bouncycastle-first@" value="${bouncycastle.first}"/>
	  <replacefilter token="@key-password@" value="${keypassword}"/>
	  <replacefilter token="@clientkey-rsa@" value="${clientkey_rsa}${keyfilext}"/>
	  <replacefilter token="@clientkey-ec@" value="${clientkey_ec}${keyfilext}"/>
  	  <replacefilter token="@jose_mode@" value="${joseMode}"/>
	</replace>
    <war destfile="${dist.dir}/${application}" webxml="${temp.dir}/web.xml">
      <classes dir="${temp.dir}">
         <exclude name="web.xml"/>
      </classes>
      <lib dir="${zip.third.party.lib.dir}">
         <include name="bcprov-*.jar"/>
      </lib>
      <lib dir="${zip.webpki.lib.dir}">
         <include name="webpki.org-libext*.jar"/>
         <include name="webpki.org-webutil*.jar"/>
      </lib>
      <fileset dir="web"/>
      <zipfileset dir="${key.dir}" prefix="${class_war_path}"/>
      <zipfileset dir="${logotype.dir}" prefix="${class_war_path}"/>
      <zipfileset dir="${signature.dir}" prefix="${class_war_path}"/>
    </war>
  </target>

  <target name="tomcat" depends="_init">
    <!-- Set path to application.  -->
    <property name="dist.dir" value="dist"/>
    <antcall target="build"/>
    <copy file="${dist.dir}/${application}" todir="${env.CATALINA_HOME}/webapps" overwrite="true" preservelastmodified="true"/>
  </target>
  
  <!-- ejbca plugin -->
  <target name="jcs-ejbca">
     <echo message="JCS Demo Plugin"/>
     <property name="zip.third.party.lib.dir" value="empty.lib"/>
     <property name="zip.webpki.lib.dir" value="empty.lib"/>
     <property name="dist.dir" value="${ejbca.gen.path}"/>
     <path id="compile.classpath.ejbca">
	    <fileset dir="${plugin.ejbca.ant.custom.enrollment_plugin_directory}/lib.common">
           <include name="*.jar"/>
        </fileset>
        <pathelement path="${ejbca.classpath}"/>
	 </path>
     <property name="compile_classpath" refid="compile.classpath.ejbca"/>
     <property name="temp.dir" value="${ejbca.tmp.path}"/>
     <property name="bouncycastle.first" value="false"/>
     <antcall target="_build">
        <param name="javaversion" value="1.6"/>
     </antcall>
     <!-- Update application.xml -->
     <replace file="${ejbca.app.xml}" value="${ejbca-app-xml-mod}">
	    <replacetoken><![CDATA[</application>]]></replacetoken>
     </replace>
  </target>

  <target name="build">
    <!-- Set path to application.  -->
    <property name="dist.dir" value="dist"/>
    <property name="zip.third.party.lib.dir" value="${third.party.lib.dir}"/>
    <property name="zip.webpki.lib.dir" value="${webpki.lib.dir}"/>
    <path id="compile.classpath">
	  <fileset dir="${webpki.lib.dir}">
        <include name="*.jar"/>
     </fileset>
     <fileset dir="${third.party.lib.dir}">
	    <include name="*.jar"/>
      </fileset>
	</path>
	<property name="compile_classpath" refid="compile.classpath"/>
    <antcall target="_build">
       <param name="javaversion" value="1.8"/>
    </antcall>
  </target>

  <target name="_createcert">
  	<java fork="yes"
  		  classname="org.webpki.ca.CommandLineCA"
  		  dir="${key.dir}"
		  failonerror="true">
  		<classpath>
  			 <fileset dir="${webpki.lib.dir}">
  		        <include name="*.jar"/>
  			 </fileset>
  			 <fileset dir="${third.party.lib.dir}">
  		        <include name="*.jar"/>
  			 </fileset>
  	    </classpath>
  	    <arg line="${cmd} -out/keyalias mykey"/>
  	</java>
  </target>

  <target name="createcerts">
    <antcall target="_createcert">
       <param name="cmd" value="-selfsigned -entity/ca -subject &quot;CN=Mybank Client Root CA1, C=US&quot; -validity/start 2010-07-10T10:00:00 -validity/end 2030-07-10T09:59:59 -out/storetype ${storetype} -out/keystore ${clientroot}${keyfilext} -out/storepass ${keypassword} -out/keypass ${keypassword} -keysize 4096 -sigalg RSA_SHA512 -serial 1"/>
    </antcall>
    <antcall target="_createcert">
       <param name="cmd" value="-ca/addpath all -ca/keypass ${keypassword} -ca/storetype ${storetype} -ca/storepass ${keypassword} -ca/keystore ${clientroot}${keyfilext} -entity/ee -subject &quot;CN=Marion Anderson, serialNumber=95673523&quot; -extension/eku clientAuth -validity/start 2017-07-10T10:00:00 -validity/end 2022-07-10T09:59:59 -out/storetype ${storetype} -out/keystore ${clientkey_rsa}${keyfilext} -out/storepass ${keypassword} -out/keypass ${keypassword} -keysize 2048 -sigalg RSA_SHA512"/>
    </antcall>
    <antcall target="_createcert">
       <param name="cmd" value="-ca/addpath all -ca/keypass ${keypassword} -ca/storetype ${storetype} -ca/storepass ${keypassword} -ca/keystore ${clientroot}${keyfilext} -entity/ee -subject &quot;CN=CN=Marion Anderson, serialNumber=95673523&quot; -extension/eku clientAuth -validity/start 2017-07-10T10:00:00 -validity/end 2022-07-10T09:59:59 -out/storetype ${storetype} -out/keystore ${clientkey_ec}${keyfilext} -out/storepass ${keypassword} -out/keypass ${keypassword}  -ecccurve NIST_P_256 -sigalg RSA_SHA512"/>
    </antcall>
  </target>
  
  <target name="_unzipit" if="uu">
    <delete dir="${dd}/${appcorename}"/>
    <unzip src="${dd}/${appcorename}.zip" dest="${dd}"/>
  </target>

  <target name="zip-distribution">
    <fail unless="dd" message="-&#10;
***************************************************************&#10;
 You must define a distribution directory using the -D option:&#10;
 ant zip-distribution -Ddd=the_path_to_the_directory.&#10;
 Optionally you can specify -Duu=0 which deletes ${appcorename}&#10;
 and replaces the directory with the unzipped content&#10;
***************************************************************&#10;"/>
	<echo message="Producing ${appcorename} .zip and .zip.SHA1 files..."/> 
   	<delete file="${dd}/${appcorename}.zip" failonerror="false"/>
    <zip destfile="${dd}/${appcorename}.zip">
      <zipfileset dir="." prefix="${appcorename}">
       	<exclude name="/**/.*"/>
        <exclude name="/.tmp/**"/>
       	<exclude name="**/.settings/**"/>
       	<exclude name="**/bin/**"/>
       	<exclude name="dist/**"/>
      </zipfileset>
    </zip>
    <checksum file="${dd}/${appcorename}.zip" fileext=".SHA1" algorithm="sha1" forceOverwrite="yes"/>
    <antcall target="_unzipit"/>
  </target>
   
</project>
